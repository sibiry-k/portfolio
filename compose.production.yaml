# portfolio_app_production

services:
  db:
    container_name: portfolio_db
    image: postgres:17.5
    env_file:
      - .env
    volumes:
      - /srv/volumes/db_data:/var/lib/postgresql/data
      - /srv/portfolio_db_dump:/docker-entrypoint-initdb.d
    restart: always
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 5

  web:
    container_name: portfolio_web
    image: sibiryk/portfolio:latest
    ports:
      - "5000:5000"
    stop_signal: SIGINT
    env_file:
      - .env
    environment:
      FLASK_ENV: production
    volumes:
      - .:/app
      - /srv/volumes/media_data:/app/media_data
    depends_on:
      db:
        condition: service_healthy

  nginx:
    container_name: portfolio_nginx
    image: nginx:1.29.0
    volumes:
      - /srv/portfolio/config/nginx/nginx.production.conf:/etc/nginx/templates/default.conf.template
      - /srv/volumes/letsencrypt/etc:/etc/letsencrypt:ro
      - /srv/volumes/letsencrypt/var:/var/lib/letsencrypt:ro
      - /srv/volumes/letsencrypt/www:/var/www/certbot:ro
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - web

  certbot:
    container_name: portfolio_certbot
    image: certbot/certbot
    volumes:
      - /srv/volumes/letsencrypt/etc:/etc/letsencrypt
      - /srv/volumes/letsencrypt/var:/var/lib/letsencrypt
      - /srv/volumes/letsencrypt/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
    depends_on:
      - nginx

networks:
  portfolio_network: {}